---

#- name: Secondary domains with mailman prefix as ssv
#  set_fact:
#    secondary_mailman_domains_ssv: "{% if secondarydomains %}{% for d in secondarydomains %}{{ mailman_prefix }}.{{ d }}{% if not loop.last %} {% endif %}{% endfor %}{% endif %}" 
#
#- name: All domains with mailman prefix as ssv
#  set_fact:
#    mailman_domains_ssv: "{{ mailman_prefix }}.{{ domain }}{% if secondary_mailman_domains_ssv %} {% endif %}{{ secondary_mailman_domains_ssv }}" 
 
- name: Clone domain_mgr containing certbot and inwx update client
  git:
    repo: "https://github.com/TheTesla/domain_mgr.git"
    dest: "/root/domain_mgr"
    force: yes

- name: Set letsencrypt account e-mail
  lineinfile:
    path: /root/domain_mgr/domain_config.bash
    regexp: '^certemail'
    line: 'certemail="{{ certemail }}"'
    create: yes

- name: Set letsencrypt extra arguments
  lineinfile:
    path: /root/domain_mgr/domain_config.bash
    regexp: '^certextra'
    line: 'certextra="{{ certextra }}"'
    create: yes

- name: Set live path certificates are copied into on rollover
  lineinfile:
    path: /root/domain_mgr/domain_config.bash
    regexp: '^certdest'
    line: 'certdest="{{ certbaselocation }}"'
    create: yes
    
- name: Set list of domains
  lineinfile:
    path: /root/domain_mgr/domain_config.bash
    regexp: '^domainlist'
    line: 'domainlist="{{ domains_ssv }} {{ mailman_domains_ssv }}"'
    create: yes
    
- name: Set inwx domain update api
  lineinfile:
    path: /root/domain_mgr/inwx_config.bash
    regexp: '^inwxapi'
    line: 'inwxapi="{{ inwxapi }}"'
    create: yes
    
- name: Set inwx login name
  lineinfile:
    path: /root/domain_mgr/inwx_config.bash
    regexp: '^inwxlogin'
    line: 'inwxlogin="{{ inwxlogin }}"'
    create: yes
    
- name: Set inwx password
  lineinfile:
    path: /root/domain_mgr/inwx_passwd.bash
    regexp: '^inwxpasswd'
    line: 'inwxpasswd="{{ inwxpasswd }}"'
    mode: 0700
    create: yes

- name: Prepare certificate
  shell: 'cd /root/domain_mgr && ./prepare.bash'
  args:
    executable: '/bin/bash'
  ignore_errors: True

- name: Immediatelly rollover certificate
  shell: 'cd /root/domain_mgr && ./rollover.bash'
  args:
    executable: '/bin/bash'
  ignore_errors: True

- name: Immediatelly cleanup
  shell: 'cd /root/domain_mgr && ./cleanup.bash'
  args:
    executable: '/bin/bash'
  ignore_errors: True

- name: Copy cron file
  copy:
    dest: "/etc/cron.d/domain"
    src: "../files/etc/cron.d/domain"
    mode: 0644
    owner: root
    group: root

